// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String?
  phone String?
  email String @unique
  tierLevel String?
  company String?
  address String?
  address2 String?
  city String
  state String
  zipCode Int
  quickbooksId String?

  orders Order[]

  @@map("customers")
}

model Product {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sku String
  name String
  price Decimal 
  imageUrl String
  description String
  tierLevel String
  quickbooksId String?
  type Type @default(SERVICE)

  orderItems OrderItem[]

  @@map("products")
}

enum Type {
  SERVICE
  NON_INVENTORY
}

model Order {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  docNumber String
  totalAmount Decimal
  invoiceNumber Int?
  poName String
  shippingRoute String
  orderStatus String
  staffId Int

  customer Customer @relation(fields: [customerId], references: [id])
  customerId Int

  orderItems OrderItem[]

  @@map("orders")
}

model OrderItem {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  quantity Int
  order Order @relation(fields:[orderId], references: [id])
  orderId Int 

  product Product? @relation(fields:[productId], references: [id])
  productId Int

  notes String?

  @@map("order-items")
}

model Bookmark {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  description String?
  link String

  userId Int
  user User @relation(fields: [userId], references: [id])

  @@map("bookmarks")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash String

  firstName String?
  lastName String?

  bookmarks Bookmark[]
  
  @@map("users")
}